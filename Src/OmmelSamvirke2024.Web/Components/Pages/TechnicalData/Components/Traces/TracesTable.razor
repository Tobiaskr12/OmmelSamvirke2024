@using OmmelSamvirke.SupportModules.Logging.Models
@using System.ComponentModel

@implements IDisposable

@inject DashboardViewModel DashboardViewModel

@if (DashboardViewModel.Traces.Count() == 0)
{
    <MudText Typo="Typo.body1" Class="mt-5">Der er ingen traces at vise for denne periode</MudText>
}
else
{
    <MudTable Items="@DashboardViewModel.FilteredTraces" Dense="true" Hover="true" Bordered="true" Breakpoint="Breakpoint.Md" Filter="new Func<TraceEntry, bool>(DashboardViewModel.TracesFilterFunc)" RowsPerPage="15" AllowUnsorted="false">
        <HeaderContent>
            <MudTh><MudTableSortLabel InitialDirection="SortDirection.Descending" SortBy="new Func<TraceEntry, object>(x => x.Timestamp)">Timestamp</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<TraceEntry, object>(x => x.OperationType)">Operation</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<TraceEntry, object>(x => x.RequestName)">Request</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<TraceEntry, object>(x => x.IsSuccess)">Success</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<TraceEntry, object>(x => x.ExecutionTimeMs)">Execution (ms)</MudTableSortLabel></MudTh>
            <MudTh>Session</MudTh>
            <MudTh>Operation Id</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Timestamp">
                @context.Timestamp.ToLocalTime().ToString("dd/MM/yyyy HH:mm:ss.fff")
            </MudTd>
            <MudTd DataLabel="OperationType">@context.OperationType</MudTd>
            <MudTd DataLabel="RequestName">@context.RequestName</MudTd>
            <MudTd DataLabel="IsSuccess">@context.IsSuccess</MudTd>
            <MudTd DataLabel="ExecutionTime">@context.ExecutionTimeMs</MudTd>
            <MudTd DataLabel="SessionId">@context.SessionId</MudTd>
            <MudTd DataLabel="OperationId">@context.OperationId</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[] { 5, 15, 25, 50 }" />
        </PagerContent>
    </MudTable>
}

@code {
    protected override void OnInitialized()
    {
        DashboardViewModel.PropertyChanged += OnDashboardViewModelChanged;
    }

    private async void OnDashboardViewModelChanged(object? sender, PropertyChangedEventArgs args)
    {
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        DashboardViewModel.PropertyChanged -= OnDashboardViewModelChanged;
    }
}
