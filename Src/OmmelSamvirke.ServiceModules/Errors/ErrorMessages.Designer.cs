//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OmmelSamvirke.ServiceModules.Errors {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ErrorMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ErrorMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("OmmelSamvirke.ServiceModules.Errors.ErrorMessages", typeof(ErrorMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The contact does not exist in the contact list.
        /// </summary>
        public static string ContactDoesNotExistInContactList {
            get {
                return ResourceManager.GetString("ContactDoesNotExistInContactList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This contact has already been added to the contact list..
        /// </summary>
        public static string ContactList_AddContact_ContactAlreadyExitsts {
            get {
                return ResourceManager.GetString("ContactList_AddContact_ContactAlreadyExitsts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The contact list you&apos;re trying to subscribe to could not be found. It might have been deleted since you unsubscribed..
        /// </summary>
        public static string ContactList_NotFound_UndoUnsubscribe {
            get {
                return ResourceManager.GetString("ContactList_NotFound_UndoUnsubscribe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You unsubscribed more than 2 weeks ago. If you want to undo your unsubscription you have to sign up to the contact list again..
        /// </summary>
        public static string ContactList_UndoTokenExpired {
            get {
                return ResourceManager.GetString("ContactList_UndoTokenExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured. Please try to click the link in the email again..
        /// </summary>
        public static string ContactList_UndoTokenNotFound {
            get {
                return ResourceManager.GetString("ContactList_UndoTokenNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We could not find the contact list you&apos;re trying to unsubscribe from. Please click the unsubscribe link in the email again..
        /// </summary>
        public static string ContactList_UnsubscribeTokenEmptyQuery {
            get {
                return ResourceManager.GetString("ContactList_UnsubscribeTokenEmptyQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected date is in the future. Select today or a date in the past to see an email-analysis for that date..
        /// </summary>
        public static string DailyEmailAnalytics_DateMustBeInPast {
            get {
                return ResourceManager.GetString("DailyEmailAnalytics_DateMustBeInPast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while attempting to send the email. Error code: .
        /// </summary>
        public static string EmailSending_Exception {
            get {
                return ResourceManager.GetString("EmailSending_Exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The email could not be sent at this time, because the service limits set by the email supplier has been reached. Please try again in an hour..
        /// </summary>
        public static string EmailSending_ServiceLimitError {
            get {
                return ResourceManager.GetString("EmailSending_ServiceLimitError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no contacts in the contact list.
        /// </summary>
        public static string EmailSendingToContactList_ContactListMustNotBeEmpty {
            get {
                return ResourceManager.GetString("EmailSendingToContactList_ContactListMustNotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred. Error Code: .
        /// </summary>
        public static string GenericErrorWithErrorCode {
            get {
                return ResourceManager.GetString("GenericErrorWithErrorCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred. Please try again..
        /// </summary>
        public static string GenericErrorWithRetryPrompt {
            get {
                return ResourceManager.GetString("GenericErrorWithRetryPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The email address is invalid.
        /// </summary>
        public static string SearchContactListsByEmail_InvalidEmail {
            get {
                return ResourceManager.GetString("SearchContactListsByEmail_InvalidEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected service limit interval for sending emails is invalid.
        /// </summary>
        public static string ServiceLimits_InvalidEmailInterval {
            get {
                return ResourceManager.GetString("ServiceLimits_InvalidEmailInterval", resourceCulture);
            }
        }
    }
}
