@using MudBlazor.Services
@using Web.Components.ViewModels
@inherits LayoutComponentBase

@implements IBrowserViewportObserver
@implements IAsyncDisposable

@inject IBrowserViewportService BrowserViewportService
@inject ThemeViewModel ThemeViewModel
@inject NavigationManager NavigationManager

<div style="@(_bp <= Breakpoint.Md ? "background-color: white" : "")">
    <MudPopoverProvider />
    <MudThemeProvider Theme="_theme" />
    <MudDialogProvider
        CloseOnEscapeKey="true"
        CloseButton="false"
        BackdropClick="true"
        MaxWidth="MaxWidth.Medium"
        Position="DialogPosition.Center"/>

    <MudLayout>
        <MudDrawer @bind-Open="_navBarOpen"
                   ClipMode="DrawerClipMode.Always"
                   Variant="DrawerVariant.Temporary"
                   Elevation="1"
                   Anchor="Anchor.Left"
                   Breakpoint="Breakpoint.Md"
                   Class="mud-height-full">
            <NavMenu OnCloseDrawer="@(() => _navBarOpen = false)"/>
            @* Close menu button *@
            <MudSpacer />
            <MudNavLink OnClick="@(() => _navBarOpen = false)" Icon="@Icons.Material.Filled.ExitToApp">
                Luk Menuen
            </MudNavLink>
        </MudDrawer>

        <MudAppBar Fixed="true" Gutters="false" Color="Color.Primary" Style="@("height: auto; box-shadow: none")" Class="py-4 prevent-select header">
            <MudGrid Style="max-width: 1600px; margin: 0 auto; padding-right: 16px; padding-left: 16px">
                <MudItem xs="9" Style="padding-top: 0; padding-left: 0" Class="d-flex align-center">
                    <MudText
                        Class="header-text"
                        Align="Align.Left"
                        Typo="Typo.h2"
                        Style="cursor: pointer; font-family: 'Lobster Two', cursive; font-style: italic"
                        onclick="@(() =>
                                 {
                                     NavigationManager.NavigateTo("/");
                                     _activePage = null;
                                     _navBarOpen = false;
                                 })">
                        Ommel Samvirke
                    </MudText>
                </MudItem>
                <MudItem xs="3" Style="padding-top: 0; padding-left: 0">
                    <span class="d-flex flex-row justify-end align-center" style="height: 100%">
                        @if (_bp <= Breakpoint.Md)
                        {
                            <MudIconButton Icon="@Icons.Material.Filled.Menu"
                                           Class="burger-menu"
                                           Size="Size.Large"
                                           Color="Color.Inherit"
                                           OnClick="ToggleNavBar" />
                        }
                        else
                        {
                            <input type="text" id="search-input" class="d-flex flex-row justify-space-between" placeholder="Søg"/>
                            <div id="search-input-icon-overlay" class="d-flex align-center justify-center">
                                <MudIcon Icon="@Icons.Material.Filled.Search" Style="color: #666"/>
                            </div>
                        }
                    </span>
                </MudItem>
            </MudGrid>
        </MudAppBar>

        @* On larger screens, show a navbar right under the website header *@
        @if (_bp > Breakpoint.Md)
        {
            <div class="d-flex py-2 align-start sub-app-bar-height prevent-select large-nav-bar">
                <MudGrid Style="max-width: 1600px; margin: 0 auto; padding-left: 16px; padding-right: 16px">
                    <MudItem xs="8" Class="d-flex flex-row gap-2">
                        <span class="d-flex flex-row align-center gap-2 nav-link-container @(_activePage == Page.Activities ? "active" : string.Empty)"
                              onclick="@(() => NavigateTo(Page.Activities))">
                            <MudIcon Icon="@Icons.Material.Filled.CalendarToday" Color="Color.Primary" Style="height: 28px"/>
                            <MudText Typo="Typo.h6" Class="nav-link-text">Aktiviteter</MudText>
                        </span>
                        <span class="d-flex flex-row align-center gap-2 nav-link-container @(_activePage == Page.Beboerhuset ? "active" : string.Empty)"
                              onclick="@(() => NavigateTo(Page.Beboerhuset))">
                            <MudIcon Icon="@Icons.Material.Filled.House" Color="Color.Primary" Style="height: 28px"/>
                            <MudText Typo="Typo.h6" Class="nav-link-text">Lej Beboerhuset</MudText>
                        </span>
                        <span class="d-flex flex-row align-center gap-2 nav-link-container @(_activePage == Page.PhotoAlbum ? "active" : string.Empty)" 
                              onclick="@(() => NavigateTo(Page.PhotoAlbum))">
                            <MudIcon Icon="@Icons.Material.Filled.Photo" Color="Color.Primary" Style="height: 28px"/>
                            <MudText Typo="Typo.h6" Class="nav-link-text">Fotoalbum</MudText>
                        </span>
                        <span class="d-flex flex-row align-center gap-2 nav-link-container @(_activePage == Page.Newsletters ? "active" : string.Empty)" 
                              onclick="@(() => NavigateTo(Page.Newsletters))">
                            <MudIcon Icon="@Icons.Material.Filled.Newspaper" Color="Color.Primary" Style="height: 28px"/>
                            <MudText Typo="Typo.h6" Class="nav-link-text">Nyhedsbreve</MudText>
                        </span>
                    </MudItem>
                    <MudItem xs="4" Class="d-flex flex-row gap-1 justify-end">
                        <div class="dropdown-wrapper @(_showDropdown ? "open" : "")">
                            <MudText Typo="Typo.h6" Class="nav-link-text" Style="cursor: pointer; padding: 2px 5px" @onclick="ToggleDropdown">
                                <MudIcon
                                    Icon="@Icons.Material.Filled.KeyboardArrowDown"
                                    Class="dropdown-caret"
                                    Style="font-size:1.25rem;vertical-align:middle; margin-left:4px"/>
                                Foreninger
                            </MudText>

                            @if (_showDropdown)
                            {
                                <div class="sub-app-bar-dropdown" @onmouseleave="@(_ => _showDropdown = false)">
                                    <div class="sub-app-bar-dropdown-item">Beboerforeningen</div>
                                    <div class="sub-app-bar-dropdown-item">Kleven Havn</div>
                                    <div class="sub-app-bar-dropdown-item">Ommel Boldklub</div>
                                    <div class="sub-app-bar-dropdown-item">Flagforeningen</div>
                                    <div class="sub-app-bar-dropdown-item">Jagtforeningen</div>
                                    <div class="sub-app-bar-dropdown-item">Strandbyen Havn</div>
                                    <div class="sub-app-bar-dropdown-item">Ommel Samvirke</div>
                                    <div class="sub-app-bar-dropdown-item">Ærø Hundeklub</div>
                                </div>
                            }
                        </div>

                        <span class="d-flex flex-row align-center gap-2 nav-link-container @(_activePage == Page.AdminPanel ? "active" : string.Empty)" 
                              onclick="@(() => NavigateTo(Page.AdminPanel))">
                            <MudIcon Icon="@Icons.Material.Filled.Lock" Color="Color.Primary" Style="height: 28px"/>
                            <MudText Typo="Typo.h6" Class="nav-link-text">Administrator</MudText>
                        </span>
                    </MudItem>
                </MudGrid>
            </div>
        }
        @* On smaller screens, show navigation links at the bottom of the screen *@
        else
        {
            <!--suppress CssUnresolvedCustomProperty -->
            <div class="d-flex py-2 align-center prevent-select justify-space-evenly small-nav-bar" style="background: white; z-index: 1000">
                <span 
                    class="d-flex flex-column align-center gap-2 nav-link-container @(_activePage == Page.Activities ? "active" : string.Empty)" 
                    onclick="@(() => NavigateTo(Page.Activities))">
                    <MudIcon Icon="@Icons.Material.Filled.CalendarToday" Color="Color.Primary" Size="Size.Medium"/>
                    <MudText Typo="Typo.h6" Class="nav-link-text">Aktiviteter</MudText>
                </span>
                <span class="d-flex flex-column align-center gap-2 nav-link-container @(_activePage == Page.Beboerhuset ? "active" : string.Empty)"
                      onclick="@(() => NavigateTo(Page.Beboerhuset))">
                    <MudIcon Icon="@Icons.Material.Filled.House" Color="Color.Primary" Size="Size.Medium"/>
                    <MudText Typo="Typo.h6" Class="nav-link-text">Beboerhuset</MudText>
                </span>
                <span class="d-flex flex-column align-center gap-2 nav-link-container @(_activePage == Page.PhotoAlbum ? "active" : string.Empty)" 
                      onclick="@(() => NavigateTo(Page.PhotoAlbum))">
                    <MudIcon Icon="@Icons.Material.Filled.Photo" Color="Color.Primary" Size="Size.Medium"/>
                    <MudText Typo="Typo.h6" Class="nav-link-text">Fotoalbum</MudText>
                </span>
                <span class="d-flex flex-column align-center gap-2 nav-link-container @(_activePage == Page.Newsletters ? "active" : string.Empty)" 
                      onclick="@(() => NavigateTo(Page.Newsletters))">
                    <MudIcon Icon="@Icons.Material.Filled.Newspaper" Color="Color.Primary" Size="Size.Medium"/>
                    <MudText Typo="Typo.h6" Class="nav-link-text">Nyheder</MudText>
                </span>
            </div>
        }
        
        <MudMainContent Style="padding: 0;">
            <MudContainer 
                Gutters="false" 
                Class="main-content" 
                Style=@($"margin-top: {(_bp > Breakpoint.Md ? "calc(var(--sub-app-bar-height) + var(--app-bar-height))" : "var(--app-bar-height)")}")>
                <CascadingValue Value="_bp" Name="CurrentBreakpoint">
                    <CascadingValue Value="IsMobile" Name="IsMobile">
                        @Body
                    </CascadingValue>
                </CascadingValue>

                @* When rendering the navbar at the bottom of the page, add a container of the same height
                so the page content can be scrolled fully *@
                @if (_bp <= Breakpoint.Md)
                {
                    <MudContainer Style="height: var(--sub-app-bar-height); width: 100%" />
                }
            </MudContainer>
            
            @* Use the following concept when adding a footer. The footer will be editable, so we don't know the height*@
            @* <MudContainer Style="height: 300px; width: 100%; padding: 36px"> *@
            @*     <MudText Typo="Typo.h1">This is a test</MudText> *@
            @* </MudContainer> *@
            
        </MudMainContent>
    </MudLayout>

    <div id="blazor-error-ui">
        An unhandled error has occurred.
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
</div>

@code {

    private enum Page
    {
        Activities,
        Beboerhuset,
        PhotoAlbum,
        Newsletters,
        AdminPanel
    }

    private Page? _activePage;

    private void NavigateTo(Page page)
    {
        switch (page)
        {
            case Page.Activities:
                NavigationManager.NavigateTo("/kalender");
                _activePage = Page.Activities;
                break;
            case Page.Beboerhuset:
                NavigationManager.NavigateTo("#");
                _activePage = Page.Beboerhuset;
                break;
            case Page.PhotoAlbum:
                NavigationManager.NavigateTo("#");
                _activePage = Page.PhotoAlbum;
                break;
            case Page.Newsletters:
                NavigationManager.NavigateTo("/nyhedsbreve");
                _activePage = Page.Newsletters;
                break;
            case Page.AdminPanel:
                NavigationManager.NavigateTo("#");
                _activePage = Page.AdminPanel;
                break;
            default:
                NavigationManager.NavigateTo("/");
                _activePage = null;
                break;
        }
    }
    
    private readonly MudTheme _theme = new()
    {
        Typography = new Typography
        {
            Default = new DefaultTypography
            {
                FontFamily = ["Roboto", "Helvetica", "Arial", "sans-serif"]
            }
        }
    };
    private bool _showDropdown;

    private void ToggleDropdown()
    {
        _showDropdown = !_showDropdown;
    }
    
    private bool _navBarOpen;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme.PaletteLight = ThemeViewModel.PaletteLight;
        _theme.PaletteDark = ThemeViewModel.PaletteDark;
    }
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await BrowserViewportService.SubscribeAsync(this, fireImmediately: true);
        }

        await base.OnAfterRenderAsync(firstRender);
    }
    
    private void ToggleNavBar()
    {
        _navBarOpen = !_navBarOpen;
    }
    
    // ViewPort Breakpoint service setup
    private Breakpoint _bp;
    public async ValueTask DisposeAsync() => await BrowserViewportService.UnsubscribeAsync(this);
    private bool IsMobile => _bp <= Breakpoint.Md;

    Guid IBrowserViewportObserver.Id { get; } = Guid.NewGuid();

    ResizeOptions IBrowserViewportObserver.ResizeOptions { get; } = new()
    {
        ReportRate = 250,
        NotifyOnBreakpointOnly = true
    };

    Task IBrowserViewportObserver.NotifyBrowserViewportChangeAsync(BrowserViewportEventArgs browserViewportEventArgs)
    {
        _bp = browserViewportEventArgs.Breakpoint;
        if (_bp > Breakpoint.Md)
        {
            _navBarOpen = false;
        }
        
        return InvokeAsync(StateHasChanged);
    }
}
