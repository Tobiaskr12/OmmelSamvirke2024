//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Emails.Domain.Errors {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ErrorMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ErrorMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Emails.Domain.Errors.ErrorMessages", typeof(ErrorMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The email attachment has no content, making it invalid.
        /// </summary>
        public static string Attachment_BinaryContent_IsEmpty {
            get {
                return ResourceManager.GetString("Attachment_BinaryContent_IsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The email attachment can not be larger than 7.5MB.
        /// </summary>
        public static string Attachment_BinaryContent_TooLarge {
            get {
                return ResourceManager.GetString("Attachment_BinaryContent_TooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The email attachment name must be between 5-256 characters long.
        /// </summary>
        public static string Attachment_Name_InvalidLength {
            get {
                return ResourceManager.GetString("Attachment_Name_InvalidLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The description of a contact list must be between 5-2000 characters long.
        /// </summary>
        public static string ContactList_Description_InvalidLength {
            get {
                return ResourceManager.GetString("ContactList_Description_InvalidLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of a contact list must be between 3-200 characters long.
        /// </summary>
        public static string ContactList_Name_InvalidLength {
            get {
                return ResourceManager.GetString("ContactList_Name_InvalidLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The email can not have more than 10 attachments.
        /// </summary>
        public static string Email_Attachments_InvalidSize {
            get {
                return ResourceManager.GetString("Email_Attachments_InvalidSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The body content must be at least 20 characters long and the content size must be less than 7MB.
        /// </summary>
        public static string Email_Body_InvalidLength {
            get {
                return ResourceManager.GetString("Email_Body_InvalidLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The total size of the email must be less than 7.5MB.
        /// </summary>
        public static string Email_ContentSize_TooLarge {
            get {
                return ResourceManager.GetString("Email_ContentSize_TooLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The email must have between 1-50 recipients.
        /// </summary>
        public static string Email_Recipient_InvalidSize {
            get {
                return ResourceManager.GetString("Email_Recipient_InvalidSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sender address is not approved for sending emails.
        /// </summary>
        public static string Email_SenderAddress_MustBeApproved {
            get {
                return ResourceManager.GetString("Email_SenderAddress_MustBeApproved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The sender address must not be empty.
        /// </summary>
        public static string Email_SenderAddress_MustNotBeEmpty {
            get {
                return ResourceManager.GetString("Email_SenderAddress_MustNotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The subject must be between 3-80 characters long.
        /// </summary>
        public static string Email_Subject_InvalidLength {
            get {
                return ResourceManager.GetString("Email_Subject_InvalidLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one recipient email address is invalid.
        /// </summary>
        public static string Recipient_EmailAddress_MustBeValid {
            get {
                return ResourceManager.GetString("Recipient_EmailAddress_MustBeValid", resourceCulture);
            }
        }
    }
}
